/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IPoolingManagerMock,
  IPoolingManagerMockInterface,
} from "../../../../../contracts/mock/poolingManager/poolingManagerMock.sol/IPoolingManagerMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "strategy",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "actionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "handleReport",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IPoolingManagerMock__factory {
  static readonly abi = _abi;
  static createInterface(): IPoolingManagerMockInterface {
    return new Interface(_abi) as IPoolingManagerMockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IPoolingManagerMock {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IPoolingManagerMock;
  }
}
