/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  TestStrategyBase,
  TestStrategyBaseInterface,
} from "../../../../../contracts/mock/strategyBase/TestStrategyBase.sol/TestStrategyBase";

const _abi = [
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "UnknownActionId",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "actionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "handleReport",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolingManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_underlyingTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_yieldTokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "yieldFactor",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_l2PoolingManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_underlyingToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_yieldToken",
        type: "address",
      },
    ],
    name: "initializeStrategyBase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nav",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolingManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "underlyingToYield",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "underlyingToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "yieldToUnderlying",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610aad806100206000396000f3fe60806040526004361061009c5760003560e01c80639d1ea42c116100645780639d1ea42c14610190578063c1590cd7146101b8578063cf062f0d146101cd578063cf756fdf146101e2578063d7f7080314610202578063dfa10b331461022257600080fd5b80632495a599146100a15780635c975abb146100de57806376d5de8514610120578063808a9df81461014057806383ce2b3414610162575b600080fd5b3480156100ad57600080fd5b506001546100c1906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100ea57600080fd5b507fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033005460ff1660405190151581526020016100d5565b34801561012c57600080fd5b506002546100c1906001600160a01b031681565b34801561014c57600080fd5b5061016061015b36600461094e565b610242565b005b34801561016e57600080fd5b5061018261017d366004610991565b610405565b6040519081526020016100d5565b6101a361019e3660046109aa565b610416565b604080519283526020830191909152016100d5565b3480156101c457600080fd5b5061018261048a565b3480156101d957600080fd5b50610182610499565b3480156101ee57600080fd5b506101606101fd3660046109cc565b610506565b34801561020e57600080fd5b506000546100c1906001600160a01b031681565b34801561022e57600080fd5b5061018261023d366004610991565b610620565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156102885750825b905060008267ffffffffffffffff1660011480156102a55750303b155b9050811580156102b3575080155b156102d15760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156102fb57845460ff60401b1916600160401b1785555b61030361062b565b6001600160a01b03881661032a5760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b0387166103515760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b0386166103785760405163d92e233d60e01b815260040160405180910390fd5b600080546001600160a01b03808b166001600160a01b031992831617909255600180548a8416908316179055600280549289169290911691909117905583156103fb57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050565b60006104108261063d565b92915050565b600080610421610660565b6104296106a3565b60008461043e57610439846106ce565b610478565b600285036104565761044f846107a5565b9050610478565b6001850315610478576040516308c4d1d560e01b815260040160405180910390fd5b610480610891565b9590945092505050565b6000610494610891565b905090565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156104e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104949190610a17565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff1660008115801561054c5750825b905060008267ffffffffffffffff1660011480156105695750303b155b905081158015610577575080155b156105955760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156105bf57845460ff60401b1916600160401b1785555b6105ca898989610242565b6003869055831561061557845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050505050565b60006104108261089e565b6106336108b6565b61063b6108ff565b565b6000670de0b6b3a7640000600354836106569190610a30565b6104109190610a55565b7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033005460ff161561063b5760405163d93c066560e01b815260040160405180910390fd5b6000546001600160a01b0316331461063b576040516348f5c3ed60e01b815260040160405180910390fd5b600154600254604051632770a7eb60e21b8152306004820152602481018490526001600160a01b0392831692909116908290639dc29fac90604401600060405180830381600087803b15801561072357600080fd5b505af1158015610737573d6000803e3d6000fd5b5050505060006107468461063d565b6040516340c10f1960e01b8152306004820152602481018290529091506001600160a01b038316906340c10f1990604401600060405180830381600087803b15801561079157600080fd5b505af11580156103fb573d6000803e3d6000fd5b6001546002546000916001600160a01b039081169116826107c58561063d565b604051632770a7eb60e21b8152306004820152602481018290529091506001600160a01b03831690639dc29fac90604401600060405180830381600087803b15801561081057600080fd5b505af1158015610824573d6000803e3d6000fd5b50506040516340c10f1960e01b8152306004820152602481018890526001600160a01b03861692506340c10f199150604401600060405180830381600087803b15801561087057600080fd5b505af1158015610884573d6000803e3d6000fd5b5096979650505050505050565b600061049461089e610499565b600354600090610656670de0b6b3a764000084610a30565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661063b57604051631afcd79f60e31b815260040160405180910390fd5b6109076108b6565b7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300805460ff19169055565b80356001600160a01b038116811461094957600080fd5b919050565b60008060006060848603121561096357600080fd5b61096c84610932565b925061097a60208501610932565b915061098860408501610932565b90509250925092565b6000602082840312156109a357600080fd5b5035919050565b600080604083850312156109bd57600080fd5b50508035926020909101359150565b600080600080608085870312156109e257600080fd5b6109eb85610932565b93506109f960208601610932565b9250610a0760408601610932565b9396929550929360600135925050565b600060208284031215610a2957600080fd5b5051919050565b808202811582820484141761041057634e487b7160e01b600052601160045260246000fd5b600082610a7257634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220f1a78b1e983d0e93435f1e597ce3de8852ca65c3e6c89dd836e49287568ecedd64736f6c63430008140033";

type TestStrategyBaseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestStrategyBaseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestStrategyBase__factory extends ContractFactory {
  constructor(...args: TestStrategyBaseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TestStrategyBase & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TestStrategyBase__factory {
    return super.connect(runner) as TestStrategyBase__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestStrategyBaseInterface {
    return new Interface(_abi) as TestStrategyBaseInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TestStrategyBase {
    return new Contract(address, _abi, runner) as unknown as TestStrategyBase;
  }
}
