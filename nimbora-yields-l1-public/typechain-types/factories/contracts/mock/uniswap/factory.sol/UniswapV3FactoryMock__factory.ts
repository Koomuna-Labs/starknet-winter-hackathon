/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  UniswapV3FactoryMock,
  UniswapV3FactoryMockInterface,
} from "../../../../../contracts/mock/uniswap/factory.sol/UniswapV3FactoryMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
    ],
    name: "getPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    name: "pools",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "setPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610260806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631698ee8214610046578063bae0d918146100a9578063e9321d15146100e2575b600080fd5b61008d610054366004610193565b6001600160a01b03928316600090815260208181526040808320948616835293815283822062ffffff9390931682529190915220541690565b6040516001600160a01b03909116815260200160405180910390f35b61008d6100b7366004610193565b600060208181529381526040808220855292815282812090935282529020546001600160a01b031681565b6101626100f03660046101d6565b6001600160a01b0393841660008181526020818152604080832096881680845296825280832062ffffff9096168084529582528083208054989095166001600160a01b031998891681179095559582528181528582209282529182528481209381529290529190208054909216179055565b005b80356001600160a01b038116811461017b57600080fd5b919050565b803562ffffff8116811461017b57600080fd5b6000806000606084860312156101a857600080fd5b6101b184610164565b92506101bf60208501610164565b91506101cd60408501610180565b90509250925092565b600080600080608085870312156101ec57600080fd5b6101f585610164565b935061020360208601610164565b925061021160408601610180565b915061021f60608601610164565b90509295919450925056fea2646970667358221220bc672f12bfd6504b8193f78f419058c6113ab71bd8fdbad5575290a43537b57d64736f6c63430008140033";

type UniswapV3FactoryMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapV3FactoryMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV3FactoryMock__factory extends ContractFactory {
  constructor(...args: UniswapV3FactoryMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      UniswapV3FactoryMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): UniswapV3FactoryMock__factory {
    return super.connect(runner) as UniswapV3FactoryMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV3FactoryMockInterface {
    return new Interface(_abi) as UniswapV3FactoryMockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): UniswapV3FactoryMock {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as UniswapV3FactoryMock;
  }
}
